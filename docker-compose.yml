version: '3.7'

services:
  auths:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 4000:4000
    volumes:
      - ./src:/app/src
    networks:
      - tada-network
    command: ["npm", "run", "start:dev"]
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    environment:
      - MONGO_URI=mongodb://mongo1:27017,mongo2:27018,mongo3:27019/baylive?replicaSet=rs0

  mongo1:
    image: mongo:4.4
    container_name: mongo1
    ports:
      - 27017:27017
    volumes:
      - mongo1-data:/data/db
    networks:
      - tada-network
    command: mongod --replSet rs0 --bind_ip_all
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5

  mongo2:
    image: mongo:4.4
    container_name: mongo2
    ports:
      - 27018:27017
    volumes:
      - mongo2-data:/data/db
    networks:
      - tada-network
    command: mongod --replSet rs0 --bind_ip_all
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5

  mongo3:
    image: mongo:4.4
    container_name: mongo3
    ports:
      - 27019:27017
    volumes:
      - mongo3-data:/data/db
    networks:
      - tada-network
    command: mongod --replSet rs0 --bind_ip_all
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5

  mongo-init:
    image: mongo:4.4
    container_name: mongo-init
    networks:
      - tada-network
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    command: >
      mongo --host mongo1:27017 --eval
      'rs.initiate({
        _id: "rs0",
        members: [
          { _id: 0, host: "mongo1:27017" },
          { _id: 1, host: "mongo2:27017" },
          { _id: 2, host: "mongo3:27017" }
        ]
      })'

volumes:
  mongo1-data:
  mongo2-data:
  mongo3-data:

networks:
  tada-network: